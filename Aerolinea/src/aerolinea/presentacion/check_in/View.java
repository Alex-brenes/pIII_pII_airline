/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aerolinea.presentacion.check_in;

import aerolinea.logica.Tiquete;
import java.awt.Color;
import java.awt.Image;
import java.io.IOException;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import javax.imageio.ImageIO;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author pc
 */
public class View extends javax.swing.JInternalFrame implements Observer {

    public Model getModel() {
        return model;
    }

    public void setModel(Model model) {
        this.model = model;
        this.model.addObserver(this);
    }

    public Controller getController() {
        return controller;
    }

    /**
     * Creates new form View
     */
    public void setController(Controller controller) {
        this.controller = controller;
    }

    public View() {
        initComponents();
        this.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                change(e.getX(), e.getY());
            }
        });
        try {
            NON_AVAILABLE_SEAT = ImageIO.read(getClass().getResourceAsStream(NON_AVAILABLE_SEAT_PATH));
            AVAILABLE_SEAT = ImageIO.read(getClass().getResourceAsStream(AVAILABLE_SEAT_PATH));
        } catch (IOException ex) {

        }
        this.jTableSeat.setLocation(BEGIN, BEGIN);
        this.jTableSeat.getTableHeader().setReorderingAllowed(false);
        this.jTableSeat.getTableHeader().setResizingAllowed(false);
        this.jTableSeat.setOpaque(false);
        ((DefaultTableCellRenderer) this.jTableSeat.getDefaultRenderer(Object.class)).setOpaque(false);
        jTableSeat.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSeat = new javax.swing.JTable();
        jLabelTotal = new javax.swing.JLabel();
        jLabelSelectedSeats = new javax.swing.JLabel();
        jLabelTotalN = new javax.swing.JLabel();
        jButtonCompra = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelTotalSS = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setMaximizable(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jTableSeat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableSeat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSeatMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableSeat);

        jLabelTotal.setText("Total");

        jLabelSelectedSeats.setText("Asientos seleccionados:");

        jLabelTotalN.setText("jLabel1");

        jButtonCompra.setText("Realizar compra");
        jButtonCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCompraActionPerformed(evt);
            }
        });

        jLabel1.setText("Total");

        jLabelTotalSS.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonCompra)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelTotal)
                                .addGap(36, 36, 36)
                                .addComponent(jLabelTotalN))
                            .addComponent(jLabelSelectedSeats)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelTotalSS)
                                .addGap(19, 19, 19)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTotal)
                            .addComponent(jLabelTotalN))
                        .addGap(18, 18, 18)
                        .addComponent(jLabelSelectedSeats)
                        .addGap(139, 139, 139)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabelTotalSS))))
                .addGap(18, 18, 18)
                .addComponent(jButtonCompra)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void jTableSeatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSeatMouseClicked
        if (evt.getClickCount() == 2) {
            this.change(this.jTableSeat.getSelectedColumn(), this.jTableSeat.getSelectedRow());
        }
    }//GEN-LAST:event_jTableSeatMouseClicked

    private void jButtonCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCompraActionPerformed
        this.controller.purchase();
    }//GEN-LAST:event_jButtonCompraActionPerformed

    private Model model;
    private Controller controller;
    @Override
    public void update(java.awt.Graphics g) {
        this.paint(g);
    }

    @Override
    public void update(Observable o, Object arg) {
        this.repaint();
        jButtonCompra.setEnabled(model.getSelectedSeats().size() > 0);
        this.jTableSeat.setOpaque(false);
        this.jTableSeat.setRowHeight(AVAILABLE_SEAT.getHeight(this) + AVAILABLE_SEAT.getHeight(this) / 4);
        this.jLabelTotalN.setText(Float.toString(model.getSelectedSeats().size() * model.getViaje().getPrecio()));

    }

    private void renderSelectedSeats(List<Tiquete> selectedSeats, java.awt.Graphics g) {
        int yPosition = jLabelSelectedSeats.getY() + 60;
        for (Tiquete t : selectedSeats) {
            g.drawString(t.toString(), jLabelSelectedSeats.getX() + 20, yPosition);
            yPosition += jLabelSelectedSeats.getHeight() + 1;
        }
        jLabelTotalSS.setText(Integer.toString(model.getSelectedSeats().size()));
    }

    @Override
    public void paint(java.awt.Graphics g) {
        super.paint(g);
        this.renderRowIndex(g);
        renderSelectedSeats(model.getSelectedSeats(), g);
    }

    @Override
    public void setVisible(boolean isVisible) {
        if (isVisible) {
            this.jTableSeat.setModel(new SeatTableModel(this.model.getArray()));
        }
        super.setVisible(isVisible);
    }

    private void renderRowIndex(java.awt.Graphics g) {
        int xPosition = BEGIN - this.jTableSeat.getColumnModel().getColumn(0).getWidth();
        int yPosition = BEGIN - 20;
        int uCode = UFIRST;
        for (int x = 0; x < this.model.getArray().getColumn(); x++) {
            g.drawString(Character.toString((char) uCode++), xPosition, yPosition);
            yPosition += this.jTableSeat.getRowHeight();
        }
//        xPosition = BEGIN + AVAILABLE_SEAT.getWidth(this) / 4;
//        yPosition = BEGIN - WIDTH;
//        for (int y = 0; y < this.model.getArray().getRow(); y++) {
//            g.drawString(Integer.toString(y), xPosition, yPosition);
//            xPosition += X_DISTANCE;
//        }
//        xPosition = BEGIN;
//        yPosition = BEGIN;
//        for (int i = 0; i < this.model.getArray().getColumn(); i++) {
//            for (int z = 0; z < this.model.getArray().getRow(); z++) {
//                g.drawImage(
//                        (this.model.getArray().get(z, i)
//                        ? AVAILABLE_SEAT
//                        : NON_AVAILABLE_SEAT), xPosition, yPosition, this);
////                g.setColor((this.model.getArray().get(z, i) ? Color.RED : Color.BLUE));
////                g.fillRect(xPosition, yPosition, WIDTH, WIDTH);
//                xPosition += X_DISTANCE;
//            }
//            xPosition = BEGIN;
//            yPosition += Y_DISTANCE;
//        }
    }

    private void change(int x, int y) {
        this.controller.changeFlag(x, y);
    }
    private static final int BEGIN = 100;
    private static final int WIDTH = 10;
    private static final int Y_DISTANCE = 24;
    private static final int X_DISTANCE = 24;
    private static final int UFIRST = 0x41;
    private static Image AVAILABLE_SEAT;
    private static Image NON_AVAILABLE_SEAT;
    private static final String AVAILABLE_SEAT_PATH = "../recursos/available.png";
    private static final String NON_AVAILABLE_SEAT_PATH = "../recursos/nonavailable.png";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelSelectedSeats;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JLabel jLabelTotalN;
    private javax.swing.JLabel jLabelTotalSS;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSeat;
    // End of variables declaration//GEN-END:variables
}
